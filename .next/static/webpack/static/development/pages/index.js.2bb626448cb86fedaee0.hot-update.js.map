{"version":3,"file":"static/webpack/static/development/pages/index.js.2bb626448cb86fedaee0.hot-update.js","sources":["webpack:///./pages/portfolio/hooks/useProgress.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nlet useProgress = (start,end,duration) => {\n  let [progress, setProgress] = useState(start);\n\n  useEffect(\n    () => {\n      const getProgress = ({elapsed, total}) => Math.min(elapsed / total, 1);\n      const easeOut = progress => Math.pow(--progress, 5) + 1;\n      const time = {\n        start: performance.now(),\n        total: duration\n      };\n      const finalPosition = 47.5;\n      let rafId = null;\n\n      const step = now => {\n         time.elapsed = now - time.start;\n         const progress = getProgress(time);\n         const easing = easeOut(progress);\n         const position = easing * finalPosition;\n         //element.style.transform = `translate(${position}px)`;\n      // let step = timestamp => {\n      //   if (!start) start = timestamp;\n      //   let progress = timestamp - start;\n        setProgress(position*1000);\n        if (progress < 1) {\n          rafId = requestAnimationFrame(step);\n        }\n      };\n      rafId = requestAnimationFrame(step);\n      return () => cancelAnimationFrame(rafId);\n    },\n    [start,end,duration]\n  );\n\n  return Math.min(progress / duration, duration);\n}\n\nexport default useProgress;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}